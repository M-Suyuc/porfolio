---
import { FolderCode, Mail, User } from 'lucide-react'
import { DrawerDemo } from './render-Drawer'

const pages = [
	{ name: 'Proyects', href: '#proyects', icon: FolderCode },
	{ name: 'About', href: '#about', icon: User },
	{ name: 'Contact', href: '#contact', icon: Mail }
].map((page) => ({
	...page,
	active: Astro.url.pathname === page.href
}))
---

<header class="mx-auto hidden h-16 w-full text-center sm:flex lg:h-20">
	<nav
		class="xs:px-6 h-h-full mx-auto flex w-full max-w-screen-lg items-center justify-between px-4 sm:px-8 lg:px-0"
	>
		<div class="flex items-center gap-10">
			{
				pages.map(({ name, href, active, icon: Icon }) => (
					<a
						href={href}
						class:list={[
							'flex cursor-pointer items-center gap-[6px] font-medium hover:text-foreground/80',
							{ 'text-foreground/80': active },
							{ 'text-foreground/95': !active }
						]}
					>
						<Icon className="size-[18px]" />
						{name}
					</a>
				))
			}
		</div>
	</nav>
</header>
<header class="px-4 py-2 sm:hidden">
	<DrawerDemo client:load>
		<div class="space-y-8 py-12 text-center">
			{
				pages.map(({ name, href, active, icon: Icon }) => (
					<a
						href={href}
						class:list={[
							'flex cursor-pointer items-center justify-center gap-[6px] border-b border-neutral-900/50 pb-1 font-medium hover:text-muted-foreground',
							{ 'text-muted-foreground': active },
							{ 'text-primary': !active }
						]}
					>
						<Icon className="size-[18px]" />
						{name}
					</a>
				))
			}
		</div>
	</DrawerDemo>
</header>

<style>
	header {
		z-index: 500;
		position: sticky;
		top: 0;
		left: 0;
		animation: header linear both;
		animation-timeline: scroll(root block);
		animation-range: 0 200px;
	}
	nav a.active {
		color: gray;
	}
	@keyframes header {
		to {
			background-color: rgb(0, 0, 0);
		}
	}
</style>
<script>
	let secctions = document.querySelectorAll('section')
	const links = document.querySelectorAll('nav a')
	window.onscroll = () => {
		secctions.forEach((sec) => {
			let top = window.scrollY
			let offset = sec.offsetTop
			let height = sec.offsetHeight
			let id = sec.getAttribute('id')
			if (top >= offset && top < offset + height) {
				links.forEach((link) => {
					link.classList.remove('active')
					document.querySelector('a[href*=' + id + ']')?.classList.add('active')
				})
			}
		})
	}
</script>
